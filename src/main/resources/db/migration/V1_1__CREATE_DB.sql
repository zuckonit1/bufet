CREATE TABLE LANGUAGE(
	ID SERIAL PRIMARY KEY,
	SHORT_NAME VARCHAR(10) NOT NULL,
	FULL_NAME VARCHAR(20) NOT NULL,
	ENABLED BOOLEAN NOT NULL DEFAULT(TRUE),
	MAJOR BOOLEAN NOT NULL DEFAULT(FALSE)
);

CREATE TABLE TRANSLATION(
	ID SERIAL PRIMARY KEY
);

CREATE TABLE TEXT_LANGUAGE(
	ID SERIAL PRIMARY KEY,
	INFO VARCHAR(10000) NOT NULL,
	ID_LANGUAGE INTEGER REFERENCES LANGUAGE(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE TRANSLATION_TEXT(
	ID SERIAL PRIMARY KEY,
	ID_TRANSLATION INTEGER REFERENCES TRANSLATION(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_TEXT_LANGUAGE INTEGER REFERENCES TEXT_LANGUAGE(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE RESOURCES(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    ID_TRANSLATION INTEGER REFERENCES TRANSLATION(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ROLES(
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(100) NOT NULL DEFAULT('User')	
);

CREATE TABLE USERS (
	ID SERIAL PRIMARY KEY,
	FIRST_NAME INTEGER REFERENCES TRANSLATION(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	SECOND_NAME INTEGER REFERENCES TRANSLATION(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	LAST_NAME INTEGER REFERENCES TRANSLATION(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	AVATAR VARCHAR(100) NOT NULL DEFAULT ('images/avatars/default.jpg'),
	LOGIN VARCHAR(100) NOT NULL UNIQUE,
	PASSWORD VARCHAR(100) NOT NULL,
	ID_ROLE INTEGER REFERENCES ROLES(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE CLIENT_TYPE (
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(100) NOT NULL DEFAULT('New'),
	DISCOUNT INTEGER NOT NULL DEFAULT(0)
);

CREATE TABLE CLIENT (
	ID SERIAL PRIMARY KEY,
	ID_USER INTEGER UNIQUE REFERENCES USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_TYPE INTEGER UNIQUE REFERENCES CLIENT_TYPE(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	REG_TIME DATE NOT NULL,
	TYPE_TIME DATE NOT NULL
);

CREATE TABLE EMPLOYEE_POSITION (
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(100) NOT NULL DEFAULT('Cashier'),
	SALARY INTEGER NOT NULL DEFAULT(0)
);

CREATE TABLE EMPLOYEE_STATUS (
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(100) NOT NULL DEFAULT('Free')
);

CREATE TABLE BUFET (
	ID SERIAL PRIMARY KEY,
	NAME INTEGER REFERENCES TRANSLATION(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ADDRESS INTEGER REFERENCES TRANSLATION(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	PHONE VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(100) NOT NULL
);

CREATE TABLE EMPLOYEE (
	ID SERIAL PRIMARY KEY,
	ID_USER INTEGER UNIQUE REFERENCES USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_POSITION INTEGER REFERENCES EMPLOYEE_POSITION(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_STATUS INTEGER REFERENCES EMPLOYEE_STATUS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_BUFET INTEGER REFERENCES BUFET(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE DESK (
	ID SERIAL PRIMARY KEY,
	NUM INTEGER NOT NULL CHECK (NUM > 0),
	PLACES INTEGER NOT NULL CHECK (PLACES > 0),
	ID_BUFET INTEGER REFERENCES BUFET(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PRODUCT (
	ID SERIAL PRIMARY KEY,
	NAME INTEGER REFERENCES TRANSLATION(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE DISH_CATEGORY (
	ID SERIAL PRIMARY KEY,
	NAME INTEGER REFERENCES TRANSLATION(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE DISH (
	ID SERIAL PRIMARY KEY,
	ID_CATEGORY INTEGER REFERENCES DISH_CATEGORY(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	NAME INTEGER REFERENCES TRANSLATION(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	LOGO VARCHAR(100) NOT NULL,
	LOGO_FULL VARCHAR(100) NOT NULL,
	PRICE INTEGER NOT NULL,
	WEIGHT INTEGER,
	CALORICITY INTEGER
);

CREATE TABLE PRODUCT_DISH (
	ID SERIAL PRIMARY KEY,
	ID_DISH INTEGER REFERENCES DISH(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_PRODUCT INTEGER REFERENCES PRODUCT(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE BUFET_PRODUCT (
	ID SERIAL PRIMARY KEY,
	ID_BUFET INTEGER REFERENCES BUFET(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_PRODUCT INTEGER REFERENCES PRODUCT(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE BUFET_DISH (
	ID SERIAL PRIMARY KEY,
	ID_BUFET INTEGER REFERENCES BUFET(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_DISH INTEGER REFERENCES DISH(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	PRICE INTEGER NOT NULL CHECK(PRICE > 0)
);

CREATE TABLE PHRASES (
	ID SERIAL PRIMARY KEY,
	PHRASE INTEGER REFERENCES TRANSLATION(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ORDER_STATUS (
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(30) NOT NULL
);

CREATE TABLE ORDERS (
	ID SERIAL PRIMARY KEY,
	ID_STATUS INTEGER REFERENCES ORDER_STATUS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_EMPLOYEE INTEGER REFERENCES EMPLOYEE(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_CLIENT INTEGER REFERENCES EMPLOYEE(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_DESK INTEGER REFERENCES DESK(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_PHRASE INTEGER REFERENCES PHRASES(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE DISH_STATUS (
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(50) NOT NULL
);

CREATE TABLE ORDER_DISH (
	ID SERIAL PRIMARY KEY,
	ID_ORDER INTEGER REFERENCES ORDERS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_DISH INTEGER REFERENCES DISH(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	ID_STATUS INTEGER REFERENCES DISH_STATUS(ID) ON DELETE CASCADE ON UPDATE CASCADE
);